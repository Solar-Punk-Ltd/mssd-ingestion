name: Build and Deploy Test to VPS (PM2)

on:
  push:
    branches:
      - test
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Generate .env file
        run: |
          echo "SWARM_RPC_URL=${{ secrets.SWARM_RPC_URL }}" >> .env
          echo "GSOC_RESOURCE_ID=${{ secrets.GSOC_RESOURCE_ID }}" >> .env
          echo "GSOC_TOPIC=${{ secrets.GSOC_TOPIC }}" >> .env
          echo "STREAM_KEY=${{ secrets.STREAM_KEY }}" >> .env
          echo "STAMP=${{ secrets.STAMP }}" >> .env
          echo "RTMP_SECRET=${{ secrets.RTMP_SECRET }}" >> .env
        shell: bash

      - name: Stop and clean old project on VPS
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            pm2 delete ingestion || true
            rm -rf ~/mssd-ingestion

      - name: Upload fresh project files
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: 'dist,node_modules,.env'
          target: '~/mssd-ingestion'

      - name: Start app with PM2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/mssd-ingestion
            pm2_path=$(which pm2) && $pm2_path start dist/index.js --name ingestion --interpreter node
